{"version":3,"sources":["ng://suku-webcomponents/lib/suku-tree/suku-tree.component.ts","ng://suku-webcomponents/lib/suku-webcomponents.module.ts"],"names":["SukuTreeComponent","this","boxWidth","boxHeight","margin","top","right","bottom","left","width","height","prototype","ngOnChanges","console","log","treeDataFromApi","constructTree","treeData","JSON","parse","i","tree","d3.layout","separation","a","b","parent","children","d","childrens","size","svg","d3\r\n                    .select","append","attr","root","drawTree","_this","nodes","reverse","links","forEach","y","depth","node","selectAll","data","id","enter","x","style","level","text","product","name","target","insert","sourceX","source","sourceY","targetX","targetY","Component","args","selector","template","Input","SukuWebcomponentsModule","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Component, Input, OnChanges } from '@angular/core';\nimport * as d3 from 'd3';\n@Component({\n  selector: 'suku-tree',\n  templateUrl: './suku-tree.component.html',\n  styleUrls: ['./suku-tree.component.scss']\n})\nexport class SukuTreeComponent implements OnChanges {\n\t@Input('tree-data') treeDataFromApi;\n\t// trace tree\n\ttree;\n\troot;\n\ti;\n\tsvg;\n\tboxWidth = 180;\n\tboxHeight = 55;\n\tmargin = {\n\t\ttop: 50,\n\t\tright: 5,\n\t\tbottom: 50,\n\t\tleft: 5\n\t};\n\twidth = 1360 - this.margin.left - this.margin.right;\n\theight = 610 - this.margin.top - this.margin.bottom;\n\tdata: any;\n\tngOnChanges() {\n    console.log('called');\n\t\tif (this.treeDataFromApi) {\n      console.log('data>', this.treeDataFromApi);\n\t\t\tthis.constructTree();\n\t\t}\n\t}\n\n\tconstructTree() {\n\t const treeData = JSON.parse(this.treeDataFromApi);\n\t\tthis.i = 0;\n\t\tif (treeData) {\n\t\t\tthis.tree = d3.layout\n\t\t\t.tree()\n\t\t\t.separation((a, b) => (a.parent === b.parent ? 5 : 5.25))\n\t\t\t.children((d) => {\n\t\t\t\treturn d.childrens;\n\t\t\t})\n\t\t\t.size([ this.height, this.width ]);\n\n\t\tthis.svg = d3\n\t\t\t.select('.tree')\n\t\t\t.append('svg')\n\t\t\t.attr('width', this.width + this.margin.right + this.margin.left)\n\t\t\t.attr('height', this.height + this.margin.top + this.margin.bottom)\n\t\t\t.append('g')\n\t\t\t.attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n\t\tthis.root = treeData[0];\n\t\tthis.drawTree();\n\t\t}\n\t}\n\n\tdrawTree() {\n\t\tconst nodes = this.tree.nodes(this.root).reverse();\n\t\tconst links = this.tree.links(nodes);\n\n\t\tnodes.forEach((d) => {\n\t\t\td.y = this.width - 109 - d.depth * 270; // reverse tree\n\t\t});\n\n\t\tconst node = this.svg.selectAll('g.node').data(nodes, (d) => {\n\t\t\treturn d.id || (d.id = ++this.i); // assign id to nodes\n\t\t});\n\n\t\tconst nodeEnter = node.enter().append('g').attr('class', 'node').attr('transform', (d) => {\n\t\t\treturn 'translate(' + d.y + ',' + d.x + ')'; // append g with class attr\n\t\t});\n\n\t\t// append line into svg\n\t\tnode\n\t\t\t.append('line')\n\t\t\t.style('stroke', (d) => {\n\t\t\t\tif (d.level === 1) {\n\t\t\t\t\treturn '#6f3bda';\n\t\t\t\t}\n\t\t\t\tif (d.level === 2) {\n\t\t\t\t\treturn '#3fdbef';\n\t\t\t\t}\n\t\t\t\tif (d.level === 3) {\n\t\t\t\t\treturn '#b8ce2b';\n\t\t\t\t} else {\n\t\t\t\t\treturn '#3fdbef';\n\t\t\t\t}\n\t\t\t})\n\t\t\t.attr('x1', -(this.boxWidth / 2))\n\t\t\t.attr('y1', -(this.boxHeight / 2))\n\t\t\t.attr('x2', -(this.boxWidth / 2))\n\t\t\t.attr('y2', this.boxHeight / 2)\n\t\t\t.attr('stroke-width', '10');\n\n\t\t// append rect into svg\n\t\tnode\n\t\t\t.append('rect')\n\t\t\t.attr({\n\t\t\t\tx: -(this.boxWidth / 2),\n\t\t\t\ty: -(this.boxHeight / 2),\n\t\t\t\twidth: this.boxWidth,\n\t\t\t\theight: this.boxHeight\n\t\t\t})\n\t\t\t.attr('fill', 'white')\n\t\t\t.attr('stroke-width', '.07')\n\t\t\t.attr('stroke', 'black');\n\n\t\tnode\n\t\t\t.append('text')\n\t\t\t.attr('x', (d) => {\n\t\t\t\treturn -(this.boxWidth / 20);\n\t\t\t})\n\t\t\t.attr('y', (d) => {\n\t\t\t\treturn this.boxWidth / 60;\n\t\t\t})\n\t\t\t.style('text-anchor', 'middle')\n\t\t\t.text((d) => {\n\t\t\t\treturn d.product.name;\n\t\t\t});\n\n\t\tconst link = this.svg.selectAll('path.link').data(links, (d) => {\n\t\t\tthis.data = d;\n\t\t\treturn d.target.id;\n\t\t});\n\n\t\t// append link into svg\n\t\tlink\n\t\t\t.enter()\n\t\t\t.insert('path', 'g')\n\t\t\t.attr('class', 'link')\n\t\t\t.attr('stroke', '#000')\n\t\t\t.attr('shape-rendering', 'crispEdges')\n\t\t\t.attr('d', (d) => {\n\t\t\t\tconst sourceX = d.source.x,\n\t\t\t\t\tsourceY = d.source.y + this.boxWidth / 2,\n\t\t\t\t\ttargetX = d.target.x,\n\t\t\t\t\ttargetY = d.target.y - this.boxWidth / 2;\n\t\t\t\treturn (\n\t\t\t\t\t'M' +\n\t\t\t\t\tsourceY +\n\t\t\t\t\t',' +\n\t\t\t\t\tsourceX +\n\t\t\t\t\t'H' +\n\t\t\t\t\t(sourceY + (targetY - sourceY) / 2) +\n\t\t\t\t\t'V' +\n\t\t\t\t\ttargetX +\n\t\t\t\t\t'H' +\n\t\t\t\t\ttargetY\n\t\t\t\t);\n\t\t\t});\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { SukuTreeComponent } from './suku-tree/suku-tree.component';\n@NgModule({\n  declarations: [SukuTreeComponent],\n  imports: [],\n  exports: [SukuTreeComponent]\n})\n\nexport class SukuWebcomponentsModule {\n\n }\n"]}